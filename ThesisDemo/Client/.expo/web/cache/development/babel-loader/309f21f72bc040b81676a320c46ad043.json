{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/lunli/Thesis_LL&TJ/Thesis/ThesisDemo/Client/components/Footer.js\";\nimport * as React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport HomeScreen from \"../pages/Home\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport RegisterScreen from \"../pages/Register\";\nimport SigninScreen from \"../pages/Signin\";\nimport SavedScreen from \"../pages/Saved\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar isLoggedIn = true;\n\nvar getData = function getData() {\n  var value;\n  return _regeneratorRuntime.async(function getData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('@storage_Key'));\n\n        case 3:\n          value = _context.sent;\n\n          if (value !== null) {\n            isLoggedIn = true;\n          } else {\n            isLoggedIn = false;\n          }\n\n          _context.next = 9;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nfunction ExploreScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Explore!123\"));\n}\n\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  var _this = this;\n\n  return React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === \"Home\") {\n            iconName = focused ? \"home\" : \"home-outline\";\n          } else if (route.name === \"Explore\") {\n            iconName = focused ? \"map\" : \"map-outline\";\n          } else if (route.name === \"Saved\") {\n            iconName = focused ? \"bookmarks\" : \"bookmarks-outline\";\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 20\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: \"#007AFF\",\n      inactiveTintColor: \"gray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    initialParams: {\n      name: 42\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Explore\",\n    component: ExploreScreen,\n    options: {\n      title: 'Explore'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Saved\",\n    component: SavedScreen,\n    listeners: function listeners(_ref3) {\n      var navigation = _ref3.navigation,\n          route = _ref3.route;\n      return {\n        tabPress: function tabPress(e) {\n          e.preventDefault();\n\n          if (isLoggedIn) {\n            navigation.navigate('Saved');\n          } else {\n            navigation.navigate('Signin');\n          }\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/lunli/Thesis_LL&TJ/Thesis/ThesisDemo/Client/components/Footer.js"],"names":["React","NavigationContainer","createBottomTabNavigator","Ionicons","HomeScreen","createStackNavigator","RegisterScreen","SigninScreen","SavedScreen","AsyncStorage","isLoggedIn","getData","getItem","value","ExploreScreen","flex","justifyContent","alignItems","Tab","App","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor","title","navigation","tabPress","e","preventDefault","navigate"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Text, View } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport HomeScreen from \"../pages/Home\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport RegisterScreen from \"../pages/Register\";\nimport SigninScreen from \"../pages/Signin\";\nimport SavedScreen from \"../pages/Saved\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n\nvar isLoggedIn = true;\n\nconst getData = async () => {\n  try {\n    const value = await AsyncStorage.getItem('@storage_Key')\n    if(value !== null) {\n      isLoggedIn = true;\n    }else{\n      isLoggedIn = false;\n    }\n  } catch(e) {\n    // error reading value\n  }\n}\n\n\nfunction ExploreScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n      <Text>Explore!123</Text>\n    </View>\n  );\n}\n\n\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  return (\n    \n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === \"Home\") {\n              iconName = focused ? \"home\" : \"home-outline\";\n            } else if (route.name === \"Explore\") {\n              iconName = focused ? \"map\" : \"map-outline\";\n            } else if (route.name === \"Saved\") {\n              iconName = focused ? \"bookmarks\" : \"bookmarks-outline\";\n            }\n\n            // You can return any component that you like here!\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n        })}\n        tabBarOptions={{\n          activeTintColor: \"#007AFF\",\n          inactiveTintColor: \"gray\",\n        }}\n        \n      >\n        <Tab.Screen name=\"Home\" \n        component={HomeScreen} \n        initialParams={{ name: 42 }}\n        />\n        <Tab.Screen name=\"Explore\" \n        component={ExploreScreen} \n        options={{ title: 'Explore' }}\n        />\n        <Tab.Screen name=\"Saved\" \n        component={SavedScreen} \n        listeners={({ navigation, route }) => ({\n          tabPress: e => {\n      // Prevent default action\n      \n      e.preventDefault();\n      if(isLoggedIn){\n        navigation.navigate('Saved');\n      }else{\n        navigation.navigate('Signin');\n      }\n    },\n  })}\n        />\n      </Tab.Navigator>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}