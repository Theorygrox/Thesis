{"ast":null,"code":"var _jsxFileName = \"/Users/lunli/Thesis_LL&TJ/Thesis/ThesisDemo/Client/components/Footer.js\";\nimport * as React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport HomeScreen from \"../pages/Home\";\nimport RegisterScreen from \"../pages/Register\";\nimport SavedScreen from \"../pages/Saved\";\nimport { createStackNavigator } from '@react-navigation/stack';\n\nfunction ExploreScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"Explore!123\"));\n}\n\nvar isLoggedIn = false;\nvar Tab = createBottomTabNavigator();\nexport function Footer() {\n  var _this = this;\n\n  return React.createElement(Tab.Navigator, {\n    initialRouteName: \"Feed\",\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === \"Home\") {\n            iconName = focused ? \"home\" : \"home-outline\";\n          } else if (route.name === \"Explore\") {\n            iconName = focused ? \"map\" : \"map-outline\";\n          } else if (route.name === \"Saved\") {\n            iconName = focused ? \"bookmarks\" : \"bookmarks-outline\";\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 20\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: \"#007AFF\",\n      inactiveTintColor: \"gray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: {\n      tabBarBadge: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Explore\",\n    component: ExploreScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Saved\",\n    component: isLoggedIn ? SavedScreen : RegisterScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }));\n}\nvar Stack = createStackNavigator();\n\nfunction Stackn() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"SavedScreen\",\n    component: SavedScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })));\n}\n\n;\nexport { Stackn };","map":{"version":3,"sources":["/Users/lunli/Thesis_LL&TJ/Thesis/ThesisDemo/Client/components/Footer.js"],"names":["React","NavigationContainer","createBottomTabNavigator","Ionicons","HomeScreen","RegisterScreen","SavedScreen","createStackNavigator","ExploreScreen","flex","justifyContent","alignItems","isLoggedIn","Tab","Footer","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor","tabBarBadge","Stack","Stackn"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Text, View } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport HomeScreen from \"../pages/Home\";\nimport RegisterScreen from \"../pages/Register\";\nimport SavedScreen from \"../pages/Saved\";\nimport { createStackNavigator } from '@react-navigation/stack';\n\nfunction ExploreScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n      <Text>Explore!123</Text>\n    </View>\n  );\n}\n\n\nvar isLoggedIn = false;\nconst Tab = createBottomTabNavigator();\n\n\nexport function Footer() {\n  return (\n   \n      <Tab.Navigator\n      initialRouteName=\"Feed\"\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === \"Home\") {\n              iconName = focused ? \"home\" : \"home-outline\";\n            } else if (route.name === \"Explore\") {\n              iconName = focused ? \"map\" : \"map-outline\";\n            } else if (route.name === \"Saved\") {\n              iconName = focused ? \"bookmarks\" : \"bookmarks-outline\";\n            }\n\n            // You can return any component that you like here!\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n        })}\n        tabBarOptions={{\n          activeTintColor: \"#007AFF\",\n          inactiveTintColor: \"gray\",\n        }}\n      >\n        \n        <Tab.Screen\n          name=\"Home\"\n          component={HomeScreen} \n          options={{ tabBarBadge: 3 }}\n        />\n        <Tab.Screen name=\"Explore\" component={ExploreScreen} />\n        <Tab.Screen name=\"Saved\" component={isLoggedIn ? SavedScreen : RegisterScreen} />\n      </Tab.Navigator>\n  \n  );\n}\nconst Stack = createStackNavigator();\n\nfunction Stackn(){\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"SavedScreen\" component={SavedScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport {Stackn}\n"]},"metadata":{},"sourceType":"module"}